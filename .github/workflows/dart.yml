name: Dart CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # on: push    # Default will running for every branch.

jobs:
  build:
    # This job will run on ubuntu virtual machine
    runs-on: ubuntu-latest
    steps:

      # Setup Java environment in order to build the Android app.
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'

      # Setup the flutter environment.
      - uses: subosito/flutter-action@v1
        with:
          channel: 'beta' # 'dev', 'alpha', default to: 'stable'
          # flutter-version: '1.12.x' # you can also specify exact version of flutter

      # Get flutter dependencies.
      - run: flutter pub get

      # Statically analyze the Dart code for any errors.
      - run: flutter analyze

      # Run widget tests for our flutter project.
      # - run: flutter test

      - name: Increase version (only on main branch)
        run: |
          version=$(grep "version:" pubspec.yaml | cut -d':' -f2 | tr -d '[:space:]')
          new_version=$(echo $version | awk -F '.' '{print $1+1"."$2"."$3}')
          sed -i "s/version:.*/version: $new_version/" pubspec.yaml
          git config --global user.email "github-actions-bot@example.com"
          git config --global user.name "GitHub Actions Bot"
          git add pubspec.yaml
          git commit -m "Bump version to $new_version"

      # Build apk.
      - run: flutter build apk

      # Upload generated apk to the artifacts.
      - uses: actions/upload-artifact@v1
        with:
          name: release-apk
          path: build/app/outputs/apk/release/app-release.apk

      - name: Publish APK as artifact (only on main branch)
        uses: actions/upload-artifact@v2
        with:
          name: apk
          path: build/apk/app-release.apk